plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
}

group 'com.bruondles.androidserial'
version '1.0-SNAPSHOT'
mainClassName = 'com.brunodles.droiddevice.AndroidSerialMainKt'

sourceCompatibility = 1.8
compileKotlin { kotlinOptions.jvmTarget = "1.8" }
compileTestKotlin { kotlinOptions.jvmTarget = "1.8" }

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib"

    compile 'com.android.ddmlib:ddmlib:r16'
    compile 'com.malinskiy:adam:0.2.4'

    compile "com.github.ajalt.clikt:clikt:3.0.1"

    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.+"
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.11.3'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes(
                'Class-Path':
                        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) },
                'Main-Class': 'com.brunodles.droiddevice.AndroidSerialMainKt'
        )
    }
    from configurations.compile
    into ''
}

tasks.installDist {
    doLast {
        def outputPath = "build/install/AndroidSerial/bin"
        def initialScriptName = "AndroidSerial"
        def finalScriptName = "droid-device"
        def generateCompleteEnvVar = "_ANDROID_SERIAL_COMPLETE"
        def targetBash = "zsh"

//        def file = new File(outputPath, initialScriptName)
//        file.renameTo(new File(outputPath, finalScriptName))

        def command = "./$outputPath/$initialScriptName > $outputPath/$finalScriptName-complete.sh".toString()
        println "Run: "
        println "$generateCompleteEnvVar=$targetBash $command"

        println "\n\nPaste inside .zshrc"
        println """
            installDroidDevice() {
              installPath="\${HOME}/workspace/DroidDevice/build/install/AndroidSerial/bin"
              source \$installPath/$finalScriptName-complete.sh
            }
            
            droid-device() {
              \${HOME}/workspace/DroidDevice/build/install/DroidDevice/bin/DroidDevice \$@
              export ANDROID_SERIAL=\$(cat ~/.droiddevice.out)
            }
        """.stripIndent()

        def runtime = Runtime.getRuntime()
        String[] envVars = ["$generateCompleteEnvVar=$targetBash".toString()]
        def process = runtime.exec(command, envVars)
        process.waitFor()
        process.errorStream
    }
}